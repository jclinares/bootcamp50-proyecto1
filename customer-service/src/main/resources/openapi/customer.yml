openapi: 3.0.3
info:
  title: nttdatabanking - customer service
  description: servicio de clientes para negocio bancario
  version: 1.0.0
tags:
  - name: customer
    description: customer operations
paths:
  /customer:
    get:
      tags:
        - customer
      summary: operation customer get list
      operationId: customergetlist
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDetailDto'
        '400':
          description: invalid input
    post:
      tags:
        - customer
      summary: operation customer create
      operationId: customercreate
      requestBody:
        description: create customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateDto'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailDto'
        '400':
          description: invalid input
    put:
      tags:
        - customer
      summary: operation customer update
      operationId: customerupdate
      requestBody:
        description: update customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateDto'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailDto'
        '400':
          description: invalid input
  /customer/{id}:
    get:
      tags:
        - customer
      summary: operation customer get by id
      operationId: customergetbyid
      parameters:
        - name: id
          in: path
          description: customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailDto'
        '400':
          description: invalid input
    delete:
      tags:
        - customer
      summary: operation customer delete
      operationId: customerdelete
      parameters:
        - name: id
          in: path
          description: customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid input
components:
  schemas:
    CustomerDetailDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastname:
          type: string
        documentNumber:
          type: string
        email:
          type: string
        customerType:
          type: string
    CustomerCreateDto:
      required:
        - name
        - lastname
        - documentNumber
        - email
        - customerType
      type: object
      properties:
        name:
          type: string
        lastname:
          type: string
        documentNumber:
          type: string
        email:
          type: string
        customerType:
          type: string
    CustomerUpdateDto:
      required:
        - id
        - name
        - lastname
        - documentNumber
        - email
        - customerType
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastname:
          type: string
        documentNumber:
          type: string
        email:
          type: string
        customerType:
          type: string